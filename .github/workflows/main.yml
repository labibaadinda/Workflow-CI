name: CI - XGBoost Sleep Disorder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLProject/sleep-health_life-style_preprocessing.csv"
  TARGET_VAR: "Sleep Disorder"

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Miniconda and environment
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-file: MLProject/conda.yaml
          activate-environment: sleep-env

      # Train model with MLflow
      - name: Train model with MLflow
        working-directory: MLProject
        run: |
          pip install mlflow
          mlflow run . --env-manager=local -P file_path=sleep-health_life-style_preprocessing.csv

      # Verify model file exists before uploading
      - name: Verify Model File Exists
        run: |
          if [ -f "xgboost_best_model.joblib" ]; then
            echo "Model file exists!";
          else
            echo "Model file not found!";
            exit 1;
          fi

      # Upload trained MLflow model directory
      - name: Upload MLflow model directory
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-model-dir
          path: xgboost_model_dir

      # Download trained MLflow model directory
      - name: Download MLflow model directory
        uses: actions/download-artifact@v4
        with:
          name: mlflow-model-dir

      # Build Docker image from MLflow model directory
      - name: Build Docker Image with MLflow model
        run: |
          mlflow models build-docker -m "file://$(pwd)/xgboost_model_dir" --name xgb_model_image


      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag xgb_model_image:latest ${{ secrets.DOCKER_HUB_USERNAME }}/xgb_model_image:latest

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/xgb_model_image:latest

      # Log out from Docker Hub
      - name: Log out from Docker Hub
        run: |
          docker logout
