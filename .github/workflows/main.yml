name: CI - XGBoost Sleep Disorder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLProject/sleep-health_life-style_preprocessing.csv"
  TARGET_VAR: "Sleep Disorder"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Print RUN_ID
        run: echo "RUN_ID=$RUN_ID"


      # Setup Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      
      # Install MLflow and dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow  
          
      # Run as a mlflow project
      - name: Run MLflow project
        run: |
          mlflow run ./MLProject --env-manager=local 

      # Git LFS
      - name: Set up Git LFS
        run: |
           git config --global user.name ${{ secrets.username }}
           git config --global user.email ${{ secrets.email }}
           git lfs install
           git lfs track "mlruns/**"
           git add .gitattributes
           git commit -m "Track large files in mlruns with Git LFS" || true
           git push origin main

      # Save models to GitHub Repository
      - name: Save mlruns to repo
        run: |
          git config --global user.name ${{ secrets.username }}
          git config --global user.email ${{ secrets.email }}
          git add -f mlruns/
          git commit -m "Save mlruns from CI run" || true
          git push origin main

      # Get latest run_id
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"
          
      # Build Docker Model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "xgb_model_image:latest" 

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag xgb_model_image:latest ${{ secrets.DOCKER_HUB_USERNAME }}/xgb_model_image:latest

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/xgb_model_image:latest
